{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@fw-ext/gif-picker/external root \"flarum.core.compat['admin/app']\"","webpack://@fw-ext/gif-picker/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fw-ext/gif-picker/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fw-ext/gif-picker/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fw-ext/gif-picker/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fw-ext/gif-picker/./src/admin/components/GifManagementPage.tsx","webpack://@fw-ext/gif-picker/external root \"flarum.core.compat['common/Model']\"","webpack://@fw-ext/gif-picker/./src/common/models/GlobalGif.ts","webpack://@fw-ext/gif-picker/./src/common/models/PersonalGif.ts","webpack://@fw-ext/gif-picker/./src/common/extend.ts","webpack://@fw-ext/gif-picker/./src/admin/extend.ts","webpack://@fw-ext/gif-picker/./src/admin/index.ts","webpack://@fw-ext/gif-picker/webpack/bootstrap","webpack://@fw-ext/gif-picker/webpack/runtime/compat get default export","webpack://@fw-ext/gif-picker/webpack/runtime/define property getters","webpack://@fw-ext/gif-picker/webpack/runtime/hasOwnProperty shorthand","webpack://@fw-ext/gif-picker/webpack/runtime/make namespace object"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Button from 'flarum/common/components/Button';\nimport type Mithril from 'mithril';\n\ndeclare global {\n  interface Window {\n    m: Mithril.Static;\n  }\n}\n\nconst m = window.m;\n\nexport default class GifManagementPage extends ExtensionPage {\n  loading!: boolean;\n  gifs!: any[];\n  newGif!: { title: string; url: string; category: string };\n  editingId!: string | null;\n\n  oninit(vnode: Mithril.Vnode) {\n    super.oninit(vnode);\n    this.loading = false;\n    this.gifs = [];\n    this.newGif = {\n      title: '',\n      url: '',\n      category: ''\n    };\n    this.editingId = null;\n    this.loadGifs();\n  }\n\n  content() {\n    const translator = app.translator;\n    const loadingInitial = this.loading && this.gifs.length === 0;\n    const isEmpty = !this.loading && this.gifs.length === 0;\n\n    return (\n      <div className=\"GifPickerAdminPage container\">\n        <div className=\"GifPickerAdminPage-section\">\n          <h2 className=\"GifPickerAdminPage-heading\">\n            {String(translator.trans('fw-ext-gif-picker.admin.management.add_heading'))}\n          </h2>\n\n          <div className=\"GifPickerAdminPage-fields\">\n            <div className=\"Form-group\">\n              <label className=\"Form-label\">\n                {String(translator.trans('fw-ext-gif-picker.admin.management.fields.title_label'))}\n              </label>\n              <input\n                className=\"FormControl\"\n                placeholder={String(translator.trans('fw-ext-gif-picker.admin.management.fields.title_placeholder'))}\n                value={this.newGif.title}\n                oninput={(e: Event) => (this.newGif.title = (e.target as HTMLInputElement).value)}\n              />\n            </div>\n\n            <div className=\"Form-group\">\n              <label className=\"Form-label\">\n                {String(translator.trans('fw-ext-gif-picker.admin.management.fields.category_label'))}\n              </label>\n              <input\n                className=\"FormControl\"\n                placeholder={String(translator.trans('fw-ext-gif-picker.admin.management.fields.category_placeholder'))}\n                value={this.newGif.category}\n                oninput={(e: Event) => (this.newGif.category = (e.target as HTMLInputElement).value)}\n              />\n            </div>\n\n            <div className=\"Form-group\">\n              <label className=\"Form-label\">\n                {String(translator.trans('fw-ext-gif-picker.admin.management.fields.url_label'))}\n              </label>\n              <input\n                className=\"FormControl\"\n                placeholder={String(translator.trans('fw-ext-gif-picker.admin.management.fields.url_placeholder'))}\n                value={this.newGif.url}\n                oninput={(e: Event) => (this.newGif.url = (e.target as HTMLInputElement).value)}\n              />\n            </div>\n          </div>\n\n          <div className=\"GifPickerAdminPage-actionButtons\">\n            <Button className=\"Button Button--primary\" onclick={() => this.submitGif()} loading={this.loading}>\n              {String(\n                translator.trans(\n                  this.editingId\n                    ? 'fw-ext-gif-picker.admin.management.fields.update_button'\n                    : 'fw-ext-gif-picker.admin.management.fields.submit_button'\n                )\n              )}\n            </Button>\n\n            {this.editingId ? (\n              <Button\n                className=\"Button\"\n                onclick={() => this.cancelEditing()}\n                disabled={this.loading}\n              >\n                {String(translator.trans('fw-ext-gif-picker.admin.management.fields.cancel_button'))}\n              </Button>\n            ) : null}\n          </div>\n        </div>\n\n        <div className=\"GifPickerAdminPage-section\">\n          <h2 className=\"GifPickerAdminPage-heading\">\n            {String(translator.trans('fw-ext-gif-picker.admin.management.list_heading'))}\n          </h2>\n\n          {loadingInitial ? (\n            <div className=\"GifPickerAdminPage-status GifPickerAdminPage-status--loading\">\n              {String(translator.trans('fw-ext-gif-picker.admin.management.loading'))}\n            </div>\n          ) : isEmpty ? (\n            <div className=\"GifPickerAdminPage-status GifPickerAdminPage-status--empty\">\n              {String(translator.trans('fw-ext-gif-picker.admin.management.empty'))}\n            </div>\n          ) : (\n            <div className=\"GifPickerAdminPage-tableWrapper\">\n              <table className=\"Table GifPickerAdminPage-table\">\n                <thead>\n                  <tr>\n                    <th>{String(translator.trans('fw-ext-gif-picker.admin.management.table.title'))}</th>\n                    <th>{String(translator.trans('fw-ext-gif-picker.admin.management.table.category'))}</th>\n                    <th>{String(translator.trans('fw-ext-gif-picker.admin.management.table.preview'))}</th>\n                    <th>{String(translator.trans('fw-ext-gif-picker.admin.management.table.actions'))}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.gifs.map((gif, index) => {\n                    const id = gif && typeof gif.id === 'function' ? String(gif.id()) : String(index);\n                    const title = gif && typeof gif.title === 'function' ? String(gif.title() || '') : '';\n                    const category = gif && typeof gif.category === 'function' ? String(gif.category() || '') : '';\n                    const url = gif && typeof gif.url === 'function' ? String(gif.url() || '') : '';\n\n                    return (\n                      <tr key={id || index}>\n                        <td>{title || String(translator.trans('fw-ext-gif-picker.admin.management.table.untitled'))}</td>\n                        <td>{category || String(translator.trans('fw-ext-gif-picker.admin.management.table.category_empty'))}</td>\n                        <td className=\"GifPickerAdminPage-tablePreviewCell\">\n                          {url ? (\n                            <img\n                              className=\"GifPickerAdminPage-thumb\"\n                              src={url}\n                              alt={title || String(translator.trans('fw-ext-gif-picker.admin.management.table.preview'))}\n                            />\n                          ) : (\n                            <span className=\"GifPickerAdminPage-noPreview\">—</span>\n                          )}\n                        </td>\n                        <td className=\"GifPickerAdminPage-tableActions\">\n                          <Button\n                            className=\"Button\"\n                            onclick={() => this.startEditing(gif, id)}\n                            disabled={this.loading && this.editingId !== id}\n                          >\n                            {String(translator.trans('fw-ext-gif-picker.admin.management.actions.edit'))}\n                          </Button>\n                          <Button\n                            className=\"Button Button--danger\"\n                            onclick={() => this.deleteGif(id)}\n                            loading={this.loading && this.editingId === id}\n                          >\n                            {String(translator.trans('fw-ext-gif-picker.admin.management.actions.delete'))}\n                          </Button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  loadGifs() {\n    this.loading = true;\n    m.redraw();\n\n    app\n      .request({\n        method: 'GET',\n        url: this.apiUrl('/global-gifs'),\n      })\n      .then((response: any) => {\n        this.gifs = response.data\n          .map((item: any) => app.store.pushPayload({ data: item }))\n          .filter((gif: any) => gif);\n      })\n      .catch((error) => {\n        console.error('[fw-ext/gif-picker] Failed to load global GIFs', error);\n        this.gifs = [];\n        app.alerts.show({\n          type: 'error',\n          content: app.translator.trans('fw-ext-gif-picker.admin.management.load_error'),\n        });\n      })\n      .finally(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  submitGif() {\n    const translator = app.translator;\n\n    if (!this.newGif.url.trim()) {\n      alert(String(translator.trans('fw-ext-gif-picker.admin.management.fields.url_required')));\n      return;\n    }\n\n    if (this.editingId) {\n      this.updateGif();\n    } else {\n      this.createGif();\n    }\n  }\n\n  createGif() {\n    this.loading = true;\n\n    app.store\n      .createRecord('global-gifs')\n      .save({\n        title: this.newGif.title,\n        url: this.newGif.url,\n        category: this.newGif.category || null,\n      })\n      .then(() => {\n        this.resetForm();\n        this.loadGifs();\n      })\n      .finally(() => {\n        this.loading = false;\n      });\n  }\n\n  updateGif() {\n    if (!this.editingId) {\n      return;\n    }\n\n    this.loading = true;\n\n    app\n      .request({\n        method: 'PATCH',\n        url: this.apiUrl(`/global-gifs/${this.editingId}`),\n        body: {\n          data: {\n            type: 'global-gifs',\n            id: this.editingId,\n            attributes: {\n              title: this.newGif.title,\n              url: this.newGif.url,\n              category: this.newGif.category || null,\n            },\n          },\n        },\n      })\n      .then(() => {\n        this.loadGifs();\n        this.resetForm();\n      })\n      .catch((error) => {\n        console.error('[fw-ext/gif-picker] Failed to update global GIF', error);\n        app.alerts.show({\n          type: 'error',\n          content: app.translator.trans('fw-ext-gif-picker.admin.management.update_error'),\n        });\n      })\n      .finally(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  deleteGif(id: string) {\n    this.loading = true;\n\n    app\n      .request({\n        method: 'DELETE',\n        url: this.apiUrl(`/global-gifs/${id}`),\n      })\n      .then(() => {\n        if (this.editingId === id) {\n          this.resetForm();\n        }\n\n        this.loadGifs();\n      })\n      .catch((error) => {\n        console.error('[fw-ext/gif-picker] Failed to delete global GIF', error);\n        app.alerts.show({\n          type: 'error',\n          content: app.translator.trans('fw-ext-gif-picker.admin.management.delete_error'),\n        });\n      })\n      .finally(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  startEditing(gif: any, id: string) {\n    this.editingId = id;\n    this.newGif = {\n      title: gif && typeof gif.title === 'function' ? String(gif.title() || '') : '',\n      url: gif && typeof gif.url === 'function' ? String(gif.url() || '') : '',\n      category: gif && typeof gif.category === 'function' ? String(gif.category() || '') : '',\n    };\n  }\n\n  cancelEditing() {\n    this.resetForm();\n  }\n\n  resetForm() {\n    this.editingId = null;\n    this.newGif = { title: '', url: '', category: '' };\n  }\n\n  private apiUrl(path: string): string {\n    const base = (app.data && app.data.apiUrl) || (app.forum && typeof app.forum.attribute === 'function' ? app.forum.attribute('apiUrl') : undefined);\n\n    if (!base) {\n      throw new Error('[fw-ext/gif-picker] Unable to determine API URL in admin context');\n    }\n\n    return `${base}${path}`;\n  }\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\n\nexport default class GlobalGif extends Model {\n  title = Model.attribute<string | null>('title');\n  url = Model.attribute<string>('url');\n  category = Model.attribute<string | null>('category');\n}","import Model from 'flarum/common/Model';\n\nexport default class PersonalGif extends Model {\n  title = Model.attribute<string | null>('title');\n  url = Model.attribute<string>('url');\n  userId = Model.attribute<number>('userId');\n  category = Model.attribute<string | null>('category');\n}","import Extend from 'flarum/common/extenders';\n\nexport default [\n  // Add your common extenders here\n];\n","import Extend from 'flarum/common/extenders';\nimport commonExtend from '../common/extend';\n\nexport default [\n  ...commonExtend,\n\n  // Add your admin extenders here\n];\n","import app from 'flarum/admin/app';\r\nimport GifManagementPage from './components/GifManagementPage';\r\nimport GlobalGif from '../common/models/GlobalGif';\r\nimport PersonalGif from '../common/models/PersonalGif';\r\n\r\napp.initializers.add('fw-ext-gif-picker', () => {\r\n  app.store.models['global-gifs'] = GlobalGif;\r\n  app.store.models['personal-gifs'] = PersonalGif;\r\n\r\n  (app as any).extensionData\r\n    .for('fw-ext-gif-picker')\r\n    .registerPage(GifManagementPage);\r\n});\r\n\r\nexport { default as extend } from './extend';\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["flarum","core","compat","_setPrototypeOf","t","e","Object","setPrototypeOf","bind","__proto__","_inheritsLoose","o","prototype","create","constructor","m","window","GifManagementPage","_ExtensionPage","_this","_len","arguments","length","args","Array","_key","call","apply","concat","loading","gifs","newGif","editingId","_proto","oninit","vnode","this","title","url","category","loadGifs","content","_this2","translator","app","loadingInitial","isEmpty","className","String","trans","placeholder","value","oninput","target","Button","onclick","submitGif","cancelEditing","disabled","map","gif","index","id","key","src","alt","startEditing","deleteGif","_this3","redraw","method","apiUrl","then","response","data","item","pushPayload","filter","error","console","show","type","trim","updateGif","createGif","alert","_this4","createRecord","save","resetForm","_this5","body","attributes","_this6","path","base","attribute","undefined","Error","ExtensionPage","GlobalGif","_Model","Model","PersonalGif","userId","add","models","registerPage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","obj","prop","hasOwnProperty","r","Symbol","toStringTag"],"sourceRoot":""}